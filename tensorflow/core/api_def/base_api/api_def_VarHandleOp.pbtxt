op {
  graph_op_name: "VarHandleOp"
  attr {
    name: "container"
    description: <<END
the container this variable is placed in.
END
  }
  attr {
    name: "shared_name"
    description: <<END
the name by which this variable is referred to.
END
  }
  attr {
    name: "dtype"
    description: <<END
the type of this variable. Must agree with the dtypes
of all ops using this variable.
END
  }
  attr {
    name: "shape"
    description: <<END
The (possibly partially specified) shape of this variable.
END
  }
  attr {
    name: "allowed_devices"
    description: <<END
The allowed devices containing the resource variable. Set when the output
ResourceHandle represents a per-replica/partitioned resource variable.
END
  }
  summary: "Creates a handle to a Variable resource."
  description: <<END
Note here that tensorflow converts every variable to tensors. So, if states
of your model are `VariableV2`, you don't need to convert it to `VarHandleOp`.
For example, if we check the type of both, they are just tensors.

```python
    v2_tensor = tf.raw_ops.VariableV2(shape=(1,),dtype=tf.float64)
    vh_tensor = tf.raw_ops.VarHandleOp(shape=(1,),dtype=tf.float64)
    print(type(v2_tensor))
    print(type(vh_tensor))
``` 

Above python code prints results as:

    <class '...tensorflow.python.framework.ops.Tensor'>
    <class '...tensorflow.python.framework.ops.Tensor'>

END
}
